# Importing the function from the module:
>>> MyList = __import__("1-my_list").MyList

# Checking for module docstring:
>>> module_docstring = len(__import__("1-my_list").__doc__) > 1
>>> module_docstring
True

# Checking for class docstring:
>>> class_docstring = len(__import__("1-my_list").MyList.__doc__) > 1
>>> class_docstring
True

# Checking for method docstring:
>>> method_docstring = len(__import__("1-my_list").MyList.print_sorted.__doc__) > 1
>>> method_docstring
True

# Checking that MyList inherits from list:
>>> is_subclass = issubclass(MyList, list)
>>> is_subclass
True

# Checking for empty list:
>>> l = MyList()
>>> l.print_sorted()
[]

# Checking that appending works:
>>> l.append(1)
>>> l.append(2)
>>> l.append(3)
>>> l.append(4)
>>> l
[1, 2, 3, 4]

# Checking for list already in correct order:
>>> l.print_sorted()
[1, 2, 3, 4]

# Checking for reversed order list:
>>> l = MyList()
>>> l.append(4)
>>> l.append(3)
>>> l.append(2)
>>> l.append(1)
>>> l
[4, 3, 2, 1]
>>> l.print_sorted()
[1, 2, 3, 4]
>>> l
[4, 3, 2, 1]

# Checking for one negative number:
>>> l.append(-1)
>>> l.append(5)
>>> l
[4, 3, 2, 1, -1, 5]
>>> l.print_sorted()
[-1, 1, 2, 3, 4, 5]
>>> l
[4, 3, 2, 1, -1, 5]

# Checking for all negative numbers:
>>> l = MyList()
>>> l.append(-10)
>>> l.append(-1)
>>> l.append(-7)
>>> l.append(-2)
>>> l.append(-8)
>>> l
[-10, -1, -7, -2, -8]
>>> l.print_sorted()
[-10, -8, -7, -2, -1]
>>> l
[-10, -1, -7, -2, -8]

# Checking for too many arguments:
>>> try:
...     l.print_sorted(1)
... except TypeError:
...     print("TypeError: print_sorted() takes 1 positional argument but 2 were given")
TypeError: print_sorted() takes 1 positional argument but 2 were given
